# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/bb35cb8e-49b2-4993-b257-95f243cc0737";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-221d181a-d72d-44d0-8ed9-613ecd11829e".device = "/dev/disk/by-uuid/221d181a-d72d-44d0-8ed9-613ecd11829e";
  boot.initrd.luks.devices."luks-6d9aa7ad-0f70-4910-b0ca-7b8ef2be6e33".device = "/dev/disk/by-uuid/6d9aa7ad-0f70-4910-b0ca-7b8ef2be6e33";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/E904-196A";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/44606ddf-8b29-4038-9993-db0f61fc896d"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
